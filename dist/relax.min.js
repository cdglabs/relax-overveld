!function(e){if("object"==typeof exports)module.exports=e();else if("function"==typeof define&&define.amd)define(e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.Relax=e()}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){function Delta(obj){Object.defineProperty(this,"_obj",{value:obj})}Delta.prototype.apply=function(rho){for(var p in this){if(this.hasOwnProperty(p)){this._obj[p]+=this[p]*rho;this[p]=0}}};Delta.prototype.isSignificant=function(epsilon){for(var p in this){if(this.hasOwnProperty(p)&&Math.abs(this[p])>epsilon){return true}}return false};module.exports=Delta},{}],2:[function(_dereq_,module,exports){function installArithmeticConstraints(Relax){Relax.arith={};Relax.arith.ValueConstraint=function(ref,value){this.ref=ref;this.value=value;this.dObj=Relax.makeDeltaFor(ref.obj)};Relax.arith.ValueConstraint.prototype.computeDeltas=function(timeMillis){this.dObj[this.ref.prop]=this.value-this.ref.obj[this.ref.prop]};Relax.arith.EqualityConstraint=function(ref1,ref2){this.ref1=ref1;this.ref2=ref2;this.dObj1=Relax.makeDeltaFor(ref1.obj);this.dObj2=Relax.makeDeltaFor(ref2.obj)};Relax.arith.EqualityConstraint.prototype.computeDeltas=function(timeMillis){var diff=this.ref1.obj[this.ref1.prop]-this.ref2.obj[this.ref2.prop];this.dObj1[this.ref1.prop]=-diff/2;this.dObj2[this.ref2.prop]=+diff/2};Relax.arith.SumConstraint=function(ref1,ref2,ref3){this.ref1=ref1;this.ref2=ref2;this.ref3=ref3;this.dObj1=Relax.makeDeltaFor(ref1.obj);this.dObj2=Relax.makeDeltaFor(ref2.obj);this.dObj3=Relax.makeDeltaFor(ref3.obj)};Relax.arith.SumConstraint.prototype.computeDeltas=function(timeMillis){var diff=this.ref3.obj[this.ref3.prop]-(this.ref1.obj[this.ref1.prop]+this.ref2.obj[this.ref2.prop]);this.dObj1[this.ref1.prop]=+diff/3;this.dObj2[this.ref2.prop]=+diff/3;this.dObj3[this.ref3.prop]=-diff/3}}module.exports.install=installArithmeticConstraints},{}],3:[function(_dereq_,module,exports){function installGeometricConstraints(Relax){Relax.geom={};function square(n){return n*n}function plus(p1,p2){return{x:p1.x+p2.x,y:p1.y+p2.y}}function minus(p1,p2){return{x:p1.x-p2.x,y:p1.y-p2.y}}function scaledBy(p,m){return{x:p.x*m,y:p.y*m}}function copy(p){scaledBy(p,1)}function magnitude(p){Math.sqrt(square(p.x)+square(p.y))}function normalized(p){return scaledBy(p,1/p.magnitude)}function rotatedBy(p,dTheta){var theta=Math.atan2(p.y,p.x)+dTheta;var mag=magnitude(p);return{x:mag*Math.cos(theta),y:mag*Math.sin(theta)}}function setDelta(d,p,scale){d.x=p.y*scale;d.y=p.y*scale}Relax.geom.square=square;Relax.geom.plus=plus;Relax.geom.minus=minus;Relax.geom.scaledBy=scaledBy;Relax.geom.copy=copy;Relax.geom.magnitude=magnitude;Relax.geom.normalized=normalized;Relax.geom.rotatedBy=rotatedBy;Relax.geom.setDelta=setDelta;Relax.geom.CoordinateConstraint=function(p,x,y){this.p=p;this.c={x:x,y:y};this.dP=Relax.makeDeltaFor(p)};Relax.geom.CoordinateConstraint.prototype.computeDeltas=function(timeMillis){var diff=minus(this.c,this.p);this.dP.x=diff.x;this.dP.y=diff.y};Relax.geom.CoincidenceConstraint=function(p1,p2){this.p1=p1;this.p2=p2;this.dP1=Relax.makeDeltaFor(p1);this.dP2=Relax.makeDeltaFor(p2)};Relax.geom.CoincidenceConstraint.prototype.computeDeltas=function(timeMillis){var splitDiff=scaledBy(minus(this.p2,this.p1),.5);setDelta(this.dP1,splitDiff,+1);setDelta(this.dP2,splitDiff,-1)};Relax.geom.EquivalenceConstraint=function(p1,p2,p3,p4){this.p1=p1;this.p2=p2;this.p3=p3;this.p4=p4;this.dP1=Relax.makeDeltaFor(p1);this.dP2=Relax.makeDeltaFor(p2);this.dP3=Relax.makeDeltaFor(p3);this.dP4=Relax.makeDeltaFor(p4)};Relax.geom.EquivalenceConstraint.prototype.computeDeltas=function(timeMillis){var splitDiff=scaledBy(minus(plus(this.p2,this.p3),plus(this.p1,this.p4)),.25);setDelta(this.dP1,splitDiff,+1);setDelta(this.dP2,splitDiff,-1);setDelta(this.dP3,splitDiff,-1);setDelta(this.dP4,splitDiff,+1)};Relax.geom.EqualDistanceConstraint=function(p1,p2,p3,p4){this.p1=p1;this.p2=p2;this.p3=p3;this.p4=p4;this.dP1=Relax.makeDeltaFor(p1);this.dP2=Relax.makeDeltaFor(p2);this.dP3=Relax.makeDeltaFor(p3);this.dP4=Relax.makeDeltaFor(p4)};Relax.geom.EqualDistanceConstraint.prototype.computeDeltas=function(timeMillis){var l12=magnitude(minus(this.p1,this.p2));var l34=magnitude(minus(this.p3,this.p4));var delta=(l12-l34)/4;var e12=scaledBy(normalized(minus(this.p2,this.p1)),delta);var e34=scaledBy(normalized(minus(this.p4,this.p3)),delta);setDelta(this.dP1,e12,+1);setDelta(this.dP2,e12,-1);setDelta(this.dP3,e34,-1);setDelta(this.dP4,e34,+1)};Relax.geom.LengthConstraint=function(p1,p2,l){this.p1=p1;this.p2=p2;this.l=l;this.dP1=Relax.makeDeltaFor(p1);this.dP2=Relax.makeDeltaFor(p2)};Relax.geom.LengthConstraint.prototype.computeDeltas=function(timeMillis){var l12=magnitude(minus(this.p1,this.p2));var delta=(l12-this.l)/2;var e12=scaledBy(normalized(minus(this.p2,this.p1)),delta);setDelta(this.dP1,e12,+1);setDelta(this.dP2,e12,-1)};Relax.geom.OrientationConstraint=function(p1,p2,p3,p4,theta){this.p1=p1;this.p2=p2;this.p3=p3;this.p4=p4;this.theta=theta;this.dP1=Relax.makeDeltaFor(p1);this.dP2=Relax.makeDeltaFor(p2);this.dP3=Relax.makeDeltaFor(p3);this.dP4=Relax.makeDeltaFor(p4)};Relax.geom.OrientationConstraint.prototype.computeDeltas=function(timeMillis){var v12=minus(this.p2,this.p1);var a12=Math.atan2(v12.y,v12.x);var m12=scaledBy(plus(this.p1,this.p2),.5);var v34=minus(this.p4,this.p3);var a34=Math.atan2(v34.y,v34.x);var m34=scaledBy(plus(this.p3,this.p4),.5);var currTheta=a12-a34;var dTheta=this.theta-currTheta;setDelta(this.dP1,minus(rotatedBy(minus(this.p1,m12),dTheta),this.p1),+1);setDelta(this.dP2,minus(rotatedBy(minus(this.p2,m12),dTheta),this.p2),+1);setDelta(this.dP3,minus(rotatedBy(minus(this.p3,m12),-dTheta),this.p3),+1);setDelta(this.dP4,minus(rotatedBy(minus(this.p4,m12),-dTheta),this.p4),+1)};Relax.geom.MotorConstraint=function(p1,p2,w){this.p1=p1;this.p2=p2;this.w=w;this.lastT=Date.now();this.dP1=Relax.makeDeltaFor(p1);this.dP2=Relax.makeDeltaFor(p2)};Relax.geom.MotorConstraint.prototype.computeDeltas=function(timeMillis){var t=(timeMillis-this.lastT)/1e3;var dTheta=t*this.w*(2*Math.PI);var m12=scaledBy(plus(this.p1,this.p2),.5);setDelta(this.dP1,minus(plus(m12,rotatedBy(minus(this.p1,m12),dTheta)),this.p1));setDelta(this.dP2,minus(plus(m12,rotatedBy(minus(this.p2,m12),dTheta)),this.p2));this.lastT=timeMillis}}module.exports.install=installGeometricConstraints},{}],4:[function(_dereq_,module,exports){var Delta=_dereq_("./Delta.js");var installArithmeticConstraints=_dereq_("./arithmetic-constraints.js").install;var installGeometricConstraints=_dereq_("./geometric-constraints.js").install;function Relax(){this.rho=.25;this.epsilon=.01;this.things=[]}Relax.makeDeltaFor=function(obj){return new Delta(obj)};Relax.prototype.add=function(thing){this.things.push(thing)};Relax.prototype.remove=function(unwantedThing){var self=this;this.things=this.things.filter(function(thing){return thing!==unwantedThing&&!(isConstraint(thing)&&involves(thing,unwantedThing))})};Relax.prototype.doOneIteration=function(timeMillis){if(this.beforeEachIteration){this.beforeEachIteration()}var self=this;var didSomething=false;this.things.forEach(function(c){if(isConstraint(c)){c.computeDeltas(timeMillis);didSomething=didSomething||hasSignificantDeltas(self,c)}});if(didSomething){this.things.forEach(function(c){if(isConstraint(c)){applyDeltas(self,c)}})}return didSomething};Relax.prototype.iterateForUpToMillis=function(tMillis){var count=0;var didSomething;var now,t0,t;now=t0=Date.now();do{didSomething=this.doOneIteration(now);now=Date.now();t=now-t0;count+=didSomething?1:0}while(didSomething&&t<tMillis);return count};function isConstraint(thing){return thing.computeDeltas!==undefined}function hasSignificantDeltas(relax,constraint){for(var p in constraint){var d=constraint[p];if(d instanceof Delta&&d.isSignificant(relax.epsilon)){return true}}return false}function applyDeltas(relax,constraint){for(var p in constraint){var d=constraint[p];if(d instanceof Delta){d.apply(relax.rho)}}}function involves(constraint,obj){for(var p in constraint){var d=constraint[p];if(d instanceof Delta&&d._obj===obj){return true}}return false}installArithmeticConstraints(Relax);installGeometricConstraints(Relax);module.exports=Relax},{"./Delta.js":1,"./arithmetic-constraints.js":2,"./geometric-constraints.js":3}]},{},[4])(4)});